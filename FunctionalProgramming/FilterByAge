//Read from the console n people with their age.
//Read a condition and an age filter.
//Read a format type for output and filter the people.


using System;
using System.Collections.Generic;

namespace FilterFilter
{
	class Program
	{
		static void Main(string[] args)
		{
			int n = int.Parse(Console.ReadLine());

			var people = new Dictionary<string, int>();

			for (int i = 0; i < n; i++)
			{
				string[] line = Console.ReadLine().Split(", ");
				string name = line[0];
				int age = int.Parse(line[1]);
				people.Add(name, age);
			}

			string condition = Console.ReadLine();
			int ageCondition = int.Parse(Console.ReadLine());
			string format = Console.ReadLine();

			Func<int, bool> tester = CreateTester(condition, ageCondition);
			Action<KeyValuePair<string, int>> printer =
								  CreatePrinter(format);

			foreach (var kv in people)
			{
				if (tester(kv.Value))
				{
					printer(kv);
				}
			}
		}

		private static Action<KeyValuePair<string, int>> CreatePrinter(string format)
		{
			switch (format)
			{
				case "name":
					return x => Console.WriteLine(x.Key);
				case "age":
					return x => Console.WriteLine(x.Value);
				default:
					return x => Console.WriteLine($"{x.Key} - {x.Value}");
			};
		}

		private static Func<int, bool> CreateTester(string condition, int ageCondition)
		{
			if (condition == "older")
			{
				return x => x >= ageCondition;
			}
			return x => x < ageCondition;
		}
	}
}
