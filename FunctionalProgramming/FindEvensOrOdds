//You are given a lower and an upper bound for a range of integer numbers.Then a command specifies if you need to list all even or odd numbers in the given range.Use Predicate<T>.

using System;
using System.Collections.Generic;
using System.Linq;

namespace _4.FindEvenOrOdds
{
	class Program
	{
		static void Main(string[] args)
		{
			int[] bounds = Console.ReadLine()
				.Split().Select(int.Parse).ToArray();

			int lowerBound = bounds[0];
			int upperBound = bounds[1];

			List<int> numbers = new List<int>();

			for (int i = lowerBound; i <= upperBound; i++)
			{
				numbers.Add(i);
			}

			string listCommand = Console.ReadLine();

			Predicate<int> isOdd = number => number % 2 != 0;
			Predicate<int> isEven = number => number % 2 == 0;

			Action<List<int>> printNumbers = outputNumbers => Console.WriteLine(String.Join(' ', outputNumbers));

			if (listCommand == "odd")
			{
				numbers = numbers.Where(x => isOdd(x)).ToList();
			}
			else if (listCommand == "even")
			{
				numbers = numbers.Where(x => isEven(x)).ToList();
			}

			printNumbers(numbers);
		}
	}
}
